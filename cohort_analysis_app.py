
import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

st.set_page_config(layout="wide")
st.title("ðŸ§¾ Cohort Analysis Dashboard")
st.markdown("""
This app provides a **Cohort Analysis** of customers based on their purchasing behavior. 
Explore customer retention trends and patterns through intuitive visualizations.
""")

# Load Data
@st.cache_data
def load_data():
    df = pd.read_csv("dataset/year_2009-2010.csv", encoding="latin-1")
    df = df[['InvoiceDate', 'Customer ID', 'Price', 'Quantity', 'Invoice', 'Description']]
    df.dropna(inplace=True)
    df.drop_duplicates(inplace=True)
    df['revenue'] = df['Price'] * df['Quantity']
    df.rename(columns={'Customer ID': 'customer_id', 'InvoiceDate': 'order_date', 'Invoice': 'order_id'}, inplace=True)
    df.drop(columns=['Price', 'Quantity'], inplace=True)
    df['customer_id'] = df['customer_id'].astype(int)
    df['order_date'] = pd.to_datetime(df['order_date'])
    return df

orders = load_data()

# Feature Engineering
orders['order_month'] = orders['order_date'].dt.to_period('M')
cohort_data = orders.groupby('customer_id')['order_month'].min().reset_index()
cohort_data.columns = ['customer_id', 'cohort_month']
orders = pd.merge(orders, cohort_data, on='customer_id')
orders['cohort_index'] = (orders['order_month'].dt.year - orders['cohort_month'].dt.year) * 12 +                          (orders['order_month'].dt.month - orders['cohort_month'].dt.month) + 1

# Retention Matrix
retention = orders.groupby(['cohort_month', 'cohort_index'])['customer_id'].nunique().reset_index()
cohort_sizes = retention[retention['cohort_index'] == 1][['cohort_month', 'customer_id']]
cohort_sizes.rename(columns={'customer_id': 'cohort_size'}, inplace=True)
retention = pd.merge(retention, cohort_sizes, on='cohort_month')
retention['retention_rate'] = retention['customer_id'] / retention['cohort_size']
retention_pivot = retention.pivot(index='cohort_month', columns='cohort_index', values='retention_rate')

# Heatmap Visualization
st.subheader("ðŸ“Š Retention Rate Heatmap")
st.markdown("This heatmap shows the **retention rate** of customers per cohort over time.")
fig, ax = plt.subplots(figsize=(12, 6))
sns.heatmap(retention_pivot, annot=True, fmt='.0%', cmap='Blues', ax=ax)
plt.title('Customer Retention Rates')
st.pyplot(fig)

# Revenue Analysis
st.subheader("ðŸ’° Monthly Revenue per Cohort")
st.markdown("Line plot showing the **total revenue** generated by each cohort per month.")
monthly_revenue = orders.groupby(['cohort_month', 'cohort_index'])['revenue'].sum().reset_index()
pivot_rev = monthly_revenue.pivot(index='cohort_index', columns='cohort_month', values='revenue')
fig2, ax2 = plt.subplots(figsize=(12, 6))
pivot_rev.plot(ax=ax2)
plt.title('Monthly Revenue by Cohort')
plt.xlabel('Cohort Index (Months)')
plt.ylabel('Revenue')
st.pyplot(fig2)
